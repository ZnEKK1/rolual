local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==2) then function v33()local v43=0;local v44;while true do if (1==v43) then return v44;end if (0==v43) then v44=v9(v27,v30,v30);v30=v30 + (2 -1) ;v43=1;end end end v34=nil;function v34()local v45=0;local v46;local v47;while true do if (v45==1) then return (v47 * 256) + v46 ;end if (v45==0) then v46,v47=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v45=1;end end end v29=3;end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==7) then function v41(v48,v49,v50)local v51=0;local v52;local v53;local v54;while true do if (v51==1) then v54=v48[3];return function(...)local v92=v52;local v93=v53;local v94=v54;local v95=v39;local v96=1;local v97= -1;local v98={};local v99={...};local v100=v20("#",...) -1 ;local v101={};local v102={};for v116=1270 -(226 + 1044) ,v100 do if (v116>=v94) then v98[v116-v94 ]=v99[v116 + 1 ];else v102[v116]=v99[v116 + 1 ];end end local v103=(v100-v94) + 1 ;local v104;local v105;while true do local v117=0;while true do if (v117==1) then if (v105<=(187 -144)) then if (v105<=21) then if (v105<=10) then if (v105<=4) then if (v105<=1) then if (v105==0) then v102[v104[2]]=v102[v104[3]];else v102[v104[2]][v104[3]]=v104[4];end elseif (v105<=2) then v102[v104[2]]=v41(v93[v104[3]],nil,v50);elseif (v105==3) then v102[v104[2]]=v41(v93[v104[3]],nil,v50);else v102[v104[2]]= #v102[v104[3]];end elseif (v105<=7) then if (v105<=5) then v102[v104[2]]();elseif (v105>6) then local v220=0;local v221;local v222;while true do if (1==v220) then for v373=1, #v101 do local v374=0;local v375;while true do if (v374==0) then v375=v101[v373];for v440=117 -(32 + 85) , #v375 do local v441=0;local v442;local v443;local v444;while true do if (v441==0) then v442=v375[v440];v443=v442[1];v441=1;end if (v441==1) then v444=v442[2 + 0 ];if ((v443==v102) and (v444>=v221)) then local v459=0;while true do if (v459==0) then v222[v444]=v443[v444];v442[1]=v222;break;end end end break;end end end break;end end end break;end if (v220==0) then v221=v104[2];v222={};v220=1;end end else local v223=0;local v224;while true do if (v223==0) then v224=v104[2];v102[v224](v21(v102,v224 + 1 ,v97));break;end end end elseif (v105<=8) then v102[v104[2]][v102[v104[3]]]=v102[v104[4]];elseif (v105==9) then local v225=0;local v226;while true do if (v225==0) then v226=v104[2];v102[v226](v102[v226 + 1 + 0 ]);break;end end else local v227=v104[959 -(892 + 65) ];v102[v227]=v102[v227]();end elseif (v105<=15) then if (v105<=12) then if (v105==11) then v102[v104[4 -2 ]]={};else v102[v104[2]]=v104[3] + v102[v104[4]] ;end elseif (v105<=13) then v102[v104[3 -1 ]]=v102[v104[3]]%v102[v104[7 -3 ]] ;elseif (v105>14) then if (v104[352 -(87 + 263) ]==v102[v104[184 -(67 + 113) ]]) then v96=v96 + 1 ;else v96=v104[3];end else v102[v104[2 + 0 ]]=v50[v104[3]];end elseif (v105<=18) then if (v105<=16) then local v153=0;local v154;local v155;local v156;local v157;while true do if (v153==1) then v97=(v156 + v154) -1 ;v157=0;v153=2;end if (v153==0) then v154=v104[4 -2 ];v155,v156=v95(v102[v154](v21(v102,v154 + 1 + 0 ,v97)));v153=1;end if (v153==2) then for v337=v154,v97 do local v338=0;while true do if (v338==0) then v157=v157 + 1 ;v102[v337]=v155[v157];break;end end end break;end end elseif (v105>17) then v102[v104[2]][v104[11 -8 ]]=v102[v104[4]];else local v233=v104[2];v102[v233](v102[v233 + 1 ]);end elseif (v105<=19) then local v158=0;local v159;while true do if (v158==0) then v159=v104[2];v102[v159]=v102[v159](v21(v102,v159 + (953 -(802 + 150)) ,v104[3]));break;end end elseif (v105>20) then local v234=0;local v235;while true do if (v234==0) then v235=v104[2];do return v21(v102,v235,v97);end break;end end else do return;end end elseif (v105<=32) then if (v105<=26) then if (v105<=23) then if (v105==22) then v96=v104[3];else local v161=0;local v162;local v163;local v164;while true do if (v161==1) then v164=v102[v162] + v163 ;v102[v162]=v164;v161=2;end if (2==v161) then if (v163>0) then if (v164<=v102[v162 + 1 ]) then local v415=0;while true do if (v415==0) then v96=v104[3];v102[v162 + 3 ]=v164;break;end end end elseif (v164>=v102[v162 + 1 ]) then local v416=0;while true do if (v416==0) then v96=v104[3];v102[v162 + 3 ]=v164;break;end end end break;end if (v161==0) then v162=v104[2];v163=v102[v162 + 2 ];v161=1;end end end elseif (v105<=24) then local v165=0;local v166;local v167;local v168;local v169;while true do if (v165==2) then for v339=v166,v97 do local v340=0;while true do if (0==v340) then v169=v169 + 1 ;v102[v339]=v167[v169];break;end end end break;end if (v165==1) then v97=(v168 + v166) -1 ;v169=0;v165=2;end if (v165==0) then v166=v104[2];v167,v168=v95(v102[v166](v102[v166 + 1 ]));v165=1;end end elseif (v105>25) then v102[v104[2]]();else local v236=0;local v237;local v238;while true do if (1==v236) then v102[v237 + (2 -1) ]=v238;v102[v237]=v238[v104[4]];break;end if (v236==0) then v237=v104[2];v238=v102[v104[3]];v236=1;end end end elseif (v105<=(52 -23)) then if (v105<=27) then v102[v104[2]]=v102[v104[3]][v104[3 + 1 ]];elseif (v105>28) then v102[v104[999 -(915 + 82) ]]=v104[3];else v102[v104[2]]=v104[3] + v102[v104[4]] ;end elseif (v105<=30) then v102[v104[2]]=v102[v104[8 -5 ]][v104[4]];elseif (v105>31) then v102[v104[2]]=v49[v104[3]];else do return v102[v104[2]]();end end elseif (v105<=37) then if (v105<=34) then if (v105>33) then for v216=v104[2],v104[3] do v102[v216]=nil;end else do return;end end elseif (v105<=(21 + 14)) then local v174=0;local v175;local v176;local v177;while true do if (v174==2) then if (v176>(0 -0)) then if (v177<=v102[v175 + (1188 -(1069 + 118)) ]) then v96=v104[3];v102[v175 + 3 ]=v177;end elseif (v177>=v102[v175 + 1 ]) then local v421=0;while true do if (v421==0) then v96=v104[3];v102[v175 + 3 ]=v177;break;end end end break;end if (v174==0) then v175=v104[2];v176=v102[v175 + 2 ];v174=1;end if (v174==1) then v177=v102[v175] + v176 ;v102[v175]=v177;v174=2;end end elseif (v105==36) then local v244=0;local v245;while true do if (v244==0) then v245=v104[2];v102[v245]=v102[v245](v21(v102,v245 + 1 ,v97));break;end end elseif (v104[2]==v102[v104[8 -4 ]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=40) then if (v105<=38) then local v178=0;local v179;while true do if (v178==0) then v179=v104[2];v102[v179]=v102[v179](v21(v102,v179 + 1 ,v104[3]));break;end end elseif (v105>39) then local v246=v104[2];v102[v246](v21(v102,v246 + 1 ,v104[6 -3 ]));else v102[v104[2]]=v102[v104[1 + 2 ]];end elseif (v105<=(72 -31)) then local v180=v104[2];v102[v180](v21(v102,v180 + 1 ,v104[3]));elseif (v105>42) then local v249=0;local v250;local v251;local v252;local v253;while true do if (v249==1) then v97=(v252 + v250) -(1 + 0) ;v253=791 -(368 + 423) ;v249=2;end if (v249==2) then for v376=v250,v97 do local v377=0;while true do if (v377==0) then v253=v253 + (3 -2) ;v102[v376]=v251[v253];break;end end end break;end if (0==v249) then v250=v104[2];v251,v252=v95(v102[v250](v21(v102,v250 + 1 ,v104[3])));v249=1;end end elseif (v102[v104[2]]==v104[4]) then v96=v96 + (19 -(10 + 8)) ;else v96=v104[3];end elseif (v105<=65) then if (v105<=(207 -153)) then if (v105<=(490 -(416 + 26))) then if (v105<=45) then if (v105==(140 -96)) then v102[v104[2]]=v50[v104[3]];else local v183=0;local v184;while true do if (0==v183) then v184=v104[2];do return v21(v102,v184,v97);end break;end end end elseif (v105<=46) then local v185=0;local v186;while true do if (v185==0) then v186=v104[2];v102[v186]=v102[v186](v21(v102,v186 + 1 ,v97));break;end end elseif (v105>47) then v49[v104[3]]=v102[v104[2]];else local v256=0;local v257;local v258;local v259;while true do if (0==v256) then v257=v93[v104[3]];v258=nil;v256=1;end if (v256==1) then v259={};v258=v18({},{[v7("\130\14\8\220\176\253\200","\159\221\81\97\178\212\152\176")]=function(v378,v379)local v380=0;local v381;while true do if (0==v380) then v381=v259[v379];return v381[1][v381[2]];end end end,[v7("\242\216\19\254\13\196\233\25\254\2","\122\173\135\125\155")]=function(v382,v383,v384)local v385=v259[v383];v385[1 + 0 ][v385[2]]=v384;end});v256=2;end if (v256==2) then for v387=1,v104[4] do v96=v96 + (1 -0) ;local v388=v92[v96];if (v388[1]==(438 -(145 + 293))) then v259[v387-1 ]={v102,v388[3]};else v259[v387-1 ]={v49,v388[3]};end v101[ #v101 + 1 ]=v259;end v102[v104[2]]=v41(v257,v258,v50);break;end end end elseif (v105<=51) then if (v105<=49) then v96=v104[3];elseif (v105>50) then local v260=v104[2];v102[v260](v21(v102,v260 + (431 -(44 + 386)) ,v97));else do return v102[v104[2]]();end end elseif (v105<=52) then v102[v104[2]]=v49[v104[3]];elseif (v105>53) then v102[v104[2]]=v104[3]~=(1486 -(998 + 488)) ;else v102[v104[2]][v102[v104[3]]]=v104[4];end elseif (v105<=59) then if (v105<=56) then if (v105==(18 + 37)) then v102[v104[2]][v102[v104[3]]]=v102[v104[4]];else v102[v104[2]]= #v102[v104[3]];end elseif (v105<=57) then if v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>(48 + 10)) then local v265=0;local v266;local v267;while true do if (v265==0) then v266=v104[2];v267=v102[v266];v265=1;end if (1==v265) then for v390=v266 + 1 ,v97 do v15(v267,v102[v390]);end break;end end else for v318=v104[2],v104[3] do v102[v318]=nil;end end elseif (v105<=62) then if (v105<=60) then local v193=0;local v194;local v195;local v196;local v197;while true do if (0==v193) then v194=v104[2];v195,v196=v95(v102[v194](v102[v194 + 1 ]));v193=1;end if (v193==2) then for v343=v194,v97 do v197=v197 + 1 ;v102[v343]=v195[v197];end break;end if (v193==1) then v97=(v196 + v194) -1 ;v197=0;v193=2;end end elseif (v105>61) then v102[v104[2]]=v102[v104[775 -(201 + 571) ]] + v104[4] ;else local v269=0;local v270;local v271;while true do if (v269==0) then v270=v104[2];v271=v102[v104[3]];v269=1;end if (v269==1) then v102[v270 + 1 ]=v271;v102[v270]=v271[v104[4]];break;end end end elseif (v105<=63) then v102[v104[1140 -(116 + 1022) ]]={};elseif (v105>64) then v102[v104[2]]=v104[3];else v102[v104[2]]=v102[v104[3]]%v104[4] ;end elseif (v105<=76) then if (v105<=70) then if (v105<=67) then if (v105>66) then v102[v104[8 -6 ]]=v102[v104[3]] + v104[3 + 1 ] ;else v102[v104[2]]=v102[v104[3]]%v104[14 -10 ] ;end elseif (v105<=68) then v49[v104[3]]=v102[v104[2]];elseif (v105==(244 -175)) then if v102[v104[861 -(814 + 45) ]] then v96=v96 + 1 ;else v96=v104[3];end else local v275=v104[4 -2 ];do return v102[v275](v21(v102,v275 + 1 + 0 ,v104[2 + 1 ]));end end elseif (v105<=73) then if (v105<=71) then local v203=0;local v204;while true do if (v203==0) then v204=v104[2];v102[v204]=v102[v204]();break;end end elseif (v105>72) then v102[v104[2]][v104[888 -(261 + 624) ]]=v104[4];else local v278=v104[2];local v279=v102[v278];local v280=v102[v278 + 2 ];if (v280>0) then if (v279>v102[v278 + 1 ]) then v96=v104[3];else v102[v278 + (4 -1) ]=v279;end elseif (v279<v102[v278 + (1081 -(1020 + 60)) ]) then v96=v104[3];else v102[v278 + (1426 -(630 + 793)) ]=v279;end end elseif (v105<=74) then local v205=0;local v206;local v207;local v208;while true do if (v205==0) then v206=v104[2];v207=v102[v206];v205=1;end if (1==v205) then v208=v102[v206 + (6 -4) ];if (v208>0) then if (v207>v102[v206 + 1 ]) then v96=v104[14 -11 ];else v102[v206 + 3 ]=v207;end elseif (v207<v102[v206 + 1 ]) then v96=v104[2 + 1 ];else v102[v206 + 3 ]=v207;end break;end end elseif (v105==75) then local v281=v104[2];local v282,v283=v95(v102[v281](v21(v102,v281 + 1 ,v104[3])));v97=(v283 + v281) -1 ;local v284=0;for v326=v281,v97 do local v327=0;while true do if (v327==0) then v284=v284 + 1 ;v102[v326]=v282[v284];break;end end end else local v285=v104[2];local v286={};for v328=1, #v101 do local v329=0;local v330;while true do if (0==v329) then v330=v101[v328];for v426=0, #v330 do local v427=v330[v426];local v428=v427[1];local v429=v427[2];if ((v428==v102) and (v429>=v285)) then local v436=0;while true do if (v436==0) then v286[v429]=v428[v429];v427[1]=v286;break;end end end end break;end end end end elseif (v105<=81) then if (v105<=78) then if (v105==77) then if  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=79) then local v209=0;local v210;while true do if (v209==0) then v210=v104[2];do return v102[v210](v21(v102,v210 + 1 ,v104[3]));end break;end end elseif (v105>80) then v102[v104[2]]=v102[v104[3]]%v102[v104[4]] ;elseif (v102[v104[2]]==v104[4]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=84) then if (v105<=82) then local v211=0;local v212;local v213;while true do if (v211==1) then for v348=v212 + 1 ,v97 do v15(v213,v102[v348]);end break;end if (v211==0) then v212=v104[6 -4 ];v213=v102[v212];v211=1;end end elseif (v105>83) then v102[v104[2]][v102[v104[3]]]=v104[4];else local v292=0;local v293;local v294;local v295;while true do if (1==v292) then v295={};v294=v18({},{[v7("\187\254\9\183\59\52\208","\168\228\161\96\217\95\81")]=function(v398,v399)local v400=0;local v401;while true do if (0==v400) then v401=v295[v399];return v401[1748 -(760 + 987) ][v401[2]];end end end,[v7("\228\238\32\89\56\94\213\213\43\68","\55\187\177\78\60\79")]=function(v402,v403,v404)local v405=v295[v403];v405[1][v405[2]]=v404;end});v292=2;end if (v292==2) then for v407=1,v104[4] do local v408=0;local v409;while true do if (0==v408) then v96=v96 + 1 ;v409=v92[v96];v408=1;end if (1==v408) then if (v409[1]==0) then v295[v407-1 ]={v102,v409[3]};else v295[v407-1 ]={v49,v409[3]};end v101[ #v101 + 1 ]=v295;break;end end end v102[v104[2]]=v41(v293,v294,v50);break;end if (0==v292) then v293=v93[v104[3]];v294=nil;v292=1;end end end elseif (v105<=(1998 -(1789 + 124))) then v102[v104[2]]=v104[3]~=0 ;elseif (v105>86) then local v296=0;local v297;local v298;local v299;local v300;while true do if (v296==2) then for v410=v297,v97 do v300=v300 + 1 ;v102[v410]=v298[v300];end break;end if (v296==1) then v97=(v299 + v297) -1 ;v300=0;v296=2;end if (v296==0) then v297=v104[2];v298,v299=v95(v102[v297](v21(v102,v297 + 1 ,v97)));v296=1;end end else v102[v104[2]][v104[3]]=v102[v104[770 -(745 + 21) ]];end v96=v96 + 1 ;break;end if (v117==0) then v104=v92[v96];v105=v104[1];v117=1;end end end end;end if (v51==0) then v52=v48[1];v53=v48[2];v51=1;end end end return v41(v40(),{},v28)(...);end if (v29==4) then function v36()local v55=v35();local v56=v35();local v57=1;local v58=(v32(v56,1,20) * (2^32)) + v55 ;local v59=v32(v56,21,31);local v60=((v32(v56,32)==1) and  -1) or 1 ;if (v59==0) then if (v58==(931 -(857 + 74))) then return v60 * 0 ;else local v106=0;while true do if (v106==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * ((569 -(367 + 201))/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^(979 -(214 + 713))))) ;end v37=nil;function v37(v61)local v62;if  not v61 then v61=v35();if (v61==(0 + 0)) then return "";end end v62=v11(v27,v30,(v30 + v61) -1 );v30=v30 + v61 ;local v63={};for v79=1, #v62 do v63[v79]=v10(v9(v11(v62,v79,v79)));end return v14(v63);end v29=5;end if (v29==1) then v32=nil;function v32(v64,v65,v66)if v66 then local v81=0;local v82;while true do if (v81==0) then v82=(v64/(2^(v65-1)))%(2^(((v66-(1 -0)) -(v65-1)) + 1)) ;return v82-(v82%1) ;end end else local v83=0;local v84;while true do if (v83==0) then v84=2^(v65-1) ;return (((v64%(v84 + v84))>=v84) and 1) or 0 ;end end end end v33=nil;v29=2;end if (v29==3) then v35=nil;function v35()local v67,v68,v69,v70=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v70 * (16777835 -(555 + 64))) + (v69 * 65536) + (v68 * 256) + v67 ;end v36=nil;v29=4;end if (6==v29) then v40=nil;function v40()local v71=0;local v72;local v73;local v74;local v75;local v76;local v77;while true do if (v71==0) then v72={};v73={};v74={};v71=1;end if (v71==1) then v75={v72,v73,nil,v74};v76=v35();v77={};v71=2;end if (v71==3) then for v107=1066 -(68 + 997) ,v35() do v73[v107-1 ]=v40();end return v75;end if (v71==2) then for v109=1,v76 do local v110=0;local v111;local v112;while true do if (v110==0) then v111=v33();v112=nil;v110=1;end if (v110==1) then if (v111==1) then v112=v33()~=0 ;elseif (v111==2) then v112=v36();elseif (v111==3) then v112=v37();end v77[v109]=v112;break;end end end v75[3]=v33();for v113=1,v35() do local v114=0;local v115;while true do if (v114==0) then v115=v33();if (v32(v115,1,1)==0) then local v127=0;local v128;local v129;local v130;while true do if (3==v127) then if (v32(v129,3,3)==1) then v130[4]=v77[v130[5 -1 ]];end v72[v113]=v130;break;end if (v127==1) then v130={v34(),v34(),nil,nil};if (v128==(877 -(282 + 595))) then local v134=0;while true do if (v134==0) then v130[3]=v34();v130[1641 -(1523 + 114) ]=v34();break;end end elseif (v128==1) then v130[3]=v35();elseif (v128==2) then v130[3]=v35() -(2^16) ;elseif (v128==3) then local v215=0;while true do if (v215==0) then v130[3]=v35() -(2^16) ;v130[4]=v34();break;end end end v127=2;end if (2==v127) then if (v32(v129,1,1)==1) then v130[2]=v77[v130[2]];end if (v32(v129,2,2)==1) then v130[3]=v77[v130[3 + 0 ]];end v127=3;end if (0==v127) then v128=v32(v115,2,3);v129=v32(v115,4,6);v127=1;end end end break;end end end v71=3;end end end v41=nil;v29=7;end if (0==v29) then v30=2 -1 ;v31=nil;v27=v12(v11(v27,14 -9 ),v7("\99\128","\224\77\174\63\139\38\175"),function(v78)if (v9(v78,2)==79) then local v85=0;while true do if (v85==0) then v31=v8(v11(v78,1,1));return "";end end else local v86=0;local v87;while true do if (v86==0) then v87=v10(v8(v78,16));if v31 then local v123=0;local v124;while true do if (v123==1) then return v124;end if (v123==0) then v124=v13(v87,v31);v31=nil;v123=1;end end else return v87;end break;end end end end);v29=1;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
pericles gente ba

]]--

